name: build and run tests
on:
  push:
    branches: 
      - main
      - 'HW*'
    pull_request:
      - main
      - 'HW*'
env: 
  prj_to_test: 'homework-4'
  deb_name: 'print_ip.deb'
jobs:
  build-and-run-test:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - uses: actions/checkout@v3
    # install dependencies
    - name: boost
      run: sudo apt-get update && sudo apt-get install -yq libboost-all-dev
    - name: ninja
      run: sudo apt-get install -yq ninja-build
    - name: install-clang
      run: sudo apt-get install -yq clang-15
    # build project
    - name: mkdir
      run: mkdir build
    - name: cmake preset
      run: cmake --preset linux-x64-release
      shell: bash
      env:
       CC: clang-15
       CXX: clang++-15
       GITHUB_RUN_N: ${{ github.run_number }}
    - name: cmake build
      run: cmake --build --preset linux-x64-release
      shell: bash
      env:
       CC: clang-15
       CXX: clang++-15
    # run tests
    - name: run tests
      run: ctest --test-dir ./build/linux-x64-release/${{ env.prj_to_test }}
      shell: bash
      env:
       CC: clang-15
       CXX: clang++-15
       GITHUB_RUN_N: ${{ github.run_number }}
    - name: pack deb
      run: cmake --build build/linux-x64-release --target package
      env:
       CC: clang-15
       CXX: clang++-15
    # add release
    - name: create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false
    - id: toUpper
      run: echo "::set-output name=upperCasePrj::${PRJ_NAME_MIXED^^}"
      env:
        PRJ_NAME_MIXED: ${{ env.prj_to_test }}
    - name: upload release assets
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./_deb/${{ steps.toUpper.outputs.upperCasePrj }}-1.0.${{ github.run_number }}-Linux.deb
          asset_name: ${{ steps.toUpper.outputs.upperCasePrj }}-1.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package

